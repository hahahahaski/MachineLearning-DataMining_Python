## 用于测试函数的

# def apriori_gen(Lk_1):
#     C = {}
#     Ck = []
#     for i in Lk_1:
#         for j in Lk_1:
#             if i != j:
#                 s = set()
#                 for item in i:
#                     s.add(item)
#                 for item in j:
#                     s.add(item)
#                 if len(s) == len(i)+1:
#                     fs = frozenset(s)
#                 else:
#                     continue
#                 if fs in C:
#                     C[fs] += 1
#                 else:
#                     C[fs] =1
#     for i in C:
#         temp = []
#         if C[i] == len(i)*(len(i)-1):
#             for j in i:
#                 temp.append(j)
#             Ck.append(temp)
#     return Ck
#
#
#
# Lk=[[0, 1, 2, 3, 4], [0, 1, 2, 3, 5], [0, 1, 2, 3, 6], [0, 1, 2, 3, 8], [0, 1, 2, 4, 5], [0, 1, 2, 4, 6],
#      [0, 1, 2, 4, 7], [0, 1, 2, 4, 8], [0, 1, 2, 4, 9], [0, 1, 2, 5, 6], [0, 1, 2, 5, 8], [0, 1, 2, 5, 9],
#      [0, 1, 2, 6, 8], [0, 1, 2, 6, 9], [0, 1, 2, 7, 8], [0, 1, 2, 8, 9], [0, 1, 3, 4, 5], [0, 1, 3, 4, 6],
#      [0, 1, 3, 4, 8], [0, 1, 3, 4, 9], [0, 1, 3, 5, 6], [0, 1, 3, 5, 8], [0, 1, 3, 6, 8], [0, 1, 3, 6, 9],
#      [0, 1, 4, 5, 6], [0, 1, 4, 5, 7], [0, 1, 4, 5, 8], [0, 1, 4, 5, 9], [0, 1, 4, 6, 8], [0, 1, 4, 6, 9],
#      [0, 1, 4, 7, 8], [0, 1, 4, 8, 9], [0, 1, 5, 6, 8], [0, 1, 5, 6, 9], [0, 1, 5, 7, 8], [0, 1, 5, 8, 9],
#      [0, 1, 6, 8, 9], [0, 2, 3, 4, 5], [0, 2, 3, 4, 6], [0, 2, 3, 4, 8], [0, 2, 3, 4, 9], [0, 2, 3, 5, 6],
#      [0, 2, 3, 5, 8], [0, 2, 3, 5, 9], [0, 2, 3, 6, 8], [0, 2, 3, 6, 9], [0, 2, 3, 8, 9], [0, 2, 4, 5, 6],
#      [0, 2, 4, 5, 8], [0, 2, 4, 5, 9], [0, 2, 4, 6, 7], [0, 2, 4, 6, 8], [0, 2, 4, 6, 9], [0, 2, 4, 7, 8],
#      [0, 2, 4, 8, 9], [0, 2, 5, 6, 8], [0, 2, 5, 6, 9], [0, 2, 6, 7, 8], [0, 2, 6, 8, 9], [0, 3, 4, 5, 6],
#      [0, 3, 4, 5, 7], [0, 3, 4, 5, 8], [0, 3, 4, 5, 9], [0, 3, 4, 6, 8], [0, 3, 4, 6, 9], [0, 3, 4, 7, 8],
#      [0, 3, 4, 8, 9], [0, 3, 5, 6, 8], [0, 3, 5, 6, 9], [0, 3, 5, 7, 8], [0, 3, 5, 8, 9], [0, 3, 6, 8, 9],
#      [0, 4, 5, 6, 7], [0, 4, 5, 6, 8], [0, 4, 5, 6, 9], [0, 4, 5, 7, 8], [0, 4, 5, 8, 9], [0, 4, 6, 7, 8],
#      [0, 4, 6, 8, 9], [0, 5, 6, 7, 8], [0, 5, 6, 8, 9], [1, 2, 3, 4, 5], [1, 2, 3, 4, 6], [1, 2, 3, 4, 7],
#      [1, 2, 3, 4, 8], [1, 2, 3, 5, 6], [1, 2, 3, 5, 8], [1, 2, 3, 6, 8], [1, 2, 3, 7, 8], [1, 2, 4, 5, 6],
#      [1, 2, 4, 5, 7], [1, 2, 4, 5, 8], [1, 2, 4, 5, 9], [1, 2, 4, 6, 7], [1, 2, 4, 6, 8], [1, 2, 4, 6, 9],
#      [1, 2, 4, 7, 8], [1, 2, 4, 8, 9], [1, 2, 5, 6, 7], [1, 2, 5, 6, 8], [1, 2, 5, 6, 9], [1, 2, 5, 7, 8],
#      [1, 2, 6, 7, 8], [1, 2, 6, 8, 9], [1, 2, 7, 8, 9], [1, 3, 4, 5, 6], [1, 3, 4, 5, 8], [1, 3, 4, 6, 8],
#      [1, 3, 4, 6, 9], [1, 3, 4, 7, 8], [1, 3, 5, 6, 8], [1, 4, 5, 6, 7], [1, 4, 5, 6, 8], [1, 4, 5, 6, 9],
#      [1, 4, 5, 7, 8], [1, 4, 5, 8, 9], [1, 4, 6, 7, 8], [1, 4, 6, 8, 9], [1, 5, 6, 7, 8], [1, 5, 6, 8, 9],
#      [2, 3, 4, 5, 6], [2, 3, 4, 5, 7], [2, 3, 4, 5, 8], [2, 3, 4, 5, 9], [2, 3, 4, 6, 7], [2, 3, 4, 6, 8],
#      [2, 3, 4, 6, 9], [2, 3, 4, 7, 8], [2, 3, 4, 7, 9], [2, 3, 4, 8, 9], [2, 3, 5, 6, 7], [2, 3, 5, 6, 8],
#      [2, 3, 5, 6, 9], [2, 3, 5, 7, 8], [2, 3, 6, 7, 8], [2, 3, 6, 7, 9], [2, 3, 6, 8, 9], [2, 3, 7, 8, 9],
#      [2, 4, 5, 6, 7], [2, 4, 5, 6, 8], [2, 4, 5, 6, 9], [2, 4, 5, 7, 8], [2, 4, 6, 7, 8], [2, 4, 6, 7, 9],
#      [2, 4, 6, 8, 9], [2, 4, 7, 8, 9], [2, 5, 6, 7, 8], [2, 6, 7, 8, 9], [3, 4, 5, 6, 7], [3, 4, 5, 6, 8],
#      [3, 4, 5, 6, 9], [3, 4, 5, 7, 8], [3, 4, 5, 7, 9], [3, 4, 5, 8, 9], [3, 4, 6, 7, 8], [3, 4, 6, 7, 9],
#      [3, 4, 6, 8, 9], [3, 4, 7, 8, 9], [3, 5, 6, 7, 8], [3, 5, 6, 7, 9], [3, 5, 6, 8, 9], [3, 5, 7, 8, 9],
#      [3, 6, 7, 8, 9], [4, 5, 6, 7, 8], [4, 5, 6, 7, 9], [4, 5, 6, 8, 9], [4, 5, 7, 8, 9], [4, 6, 7, 8, 9], [5, 6, 7, 8, 9]]
# print(apriori_gen(Lk))

# 测试数据库读写有多慢
import pymysql
import random
def initData():
    itemList = [1,2,3,4,5,6,7,8,9,0]
    try:
        conn = pymysql.connect(host='localhost',user='root',passwd='Xyz@123@00',db='KDD_1_DB',port=3306,charset='utf8')
        cur = conn.cursor()
        cur.execute('truncate table AprioriData;')
        for i in range(0,9999):
            for item in random.sample(itemList,random.randint(1,10)):
                cur.execute('INSERT INTO AprioriData(TID,GoodsID) VALUES('+str(i)+','+str(item)+');')
        conn.commit()
        cur.close()
        conn.close()
    except  Exception as e:
        print('1', e)

def loadData():
    dataSet = []
    try:
        conn = pymysql.connect(host='localhost',user='root',passwd='Xyz@123@00',db='KDD_1_DB',port=3306,charset='utf8')
        cur = conn.cursor()
        for i in range(0, 9999):
            cur.execute('select GoodsID from AprioriData where TID = ' + str(i))
            conn.commit()
            print(i)
            # fetchall()：将 SQL 语句的所有查询后面
            rs = list(cur.fetchall())
            res = list()
            # print(rs)
            for j in rs:
                res.append(j[0])
            dataSet.append(res)
        #print(dataSet)
        print(len(dataSet))
    except  Exception as e:
        print(e)

initData()
loadData()
